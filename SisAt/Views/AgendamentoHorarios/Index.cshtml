@using SisAt.Models.ViewModel
@{
    ViewData["Title"] = "Ínicio";
}

<div class="row">
    <div class="col-lg-3 col-6">
        <div class="small-box bg-info">
            <div class="inner">
                <h4>Cadastro </h4>
                <h5>de Horários</h5>
                <p>Acessar</p>
            </div>
            <div class="icon">
                <i class="fas fa-calendar-alt"></i>
            </div>
            <a asp-action="CadastroDeHorarios" asp-controller="AgendamentoHorarios" class="small-box-footer">Mais informações <i class="fas fa-arrow-circle-right"></i></a>
        </div>
    </div>
    <div class="col-lg-3 col-6">
        <div class="small-box bg-success">
            <div class="inner">
                <h4>Confirmar</h4>
                <h5>Agendamento</h5>
                <p>Acessar</p>
            </div>
            <div class="icon">
                <i class="fa fa-check"></i>
            </div>
            <a asp-action="ConfirmarAgendamento" asp-controller="AgendamentoHorarios" class="small-box-footer">Mais informações <i class="fas fa-arrow-circle-right"></i></a>
        </div>
    </div>
</div>
<div class="card card-dark">
    <div class="card-header">Agenda do Mês:</div>
    <div class="card-body p-0">
        <div id="calendar" style="width:100%;"></div>
    </div>
    <div class="card-footer"></div>
</div>

<input type="hidden" id="eventosData" name="eventos" value="@ViewBag.Calendario" />

<div class="modal fade" id="modal-xl-Agendamento">
    <div class="modal-dialog modal-xl">
        <div class="modal-content bg-light">
            <div class="modal-header bg-dark" id="headerModal">
                <h4 class="modal-title" id="titulo"></h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="color:white">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group d-flex">
                    <label style="font-size:16px">CIDADÃO: </label><p id="cidadao" style="margin-left:8px;"></p>
                </div>
                <div class="form-group d-flex">
                    <label>CPF: </label><p id="cpf" style="margin-left:8px;"></p>
                </div>
                <div class="form-group d-flex">
                    <label>PROTOCOLO: </label><p id="protocolo" style="margin-left:8px;"></p>
                </div>
                <div class="form-group d-flex">
                    <label>SERVIÇO: </label><p id="servico" style="margin-left:8px;"></p>
                </div>
                <div class="form-group d-flex">
                    <label>DATA MARCADA: </label><p id="dataMarcada" style="margin-left:8px;"></p>
                </div>
                <div class="form-group d-flex">
                    <label>HORÁRIO: </label><p id="horario" style="margin-left:8px;"></p>
                </div>
                <div class="form-group d-flex">
                    <label id="confirmacaoText"> </label>
                    <div class="form-group clearfix" style="margin-left:8px;">
                        <div class="icheck-success d-inline" id="divConfirmacao">
                            <input type="checkbox" id="checkConfirmado" disabled>
                            <label for="checkConfirmado"></label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
                <button type="button" class="btn btn-dark">Salvar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        var toastrMessage = TempData["Error"] as string;
        var toastrMessageSuccess = TempData["Sucesso"] as string;
    }

    @if (!string.IsNullOrEmpty(toastrMessage))
    {
        <script>
            toastr.error('@toastrMessage', 'Erro', {
                closeButton: true,
                progressBar: true
            });
        </script>
    }

    @if (!string.IsNullOrEmpty(toastrMessageSuccess))
    {
        <script>
            toastr.success('@toastrMessageSuccess', 'Sucesso.', {
                closeButton: true,
                progressBar: true
            });
        </script>
    }

    <script>
        $(function () {
           var hidenEvento = document.getElementById("eventosData").value;
           var eventoData = [];

           if (hidenEvento) {
               var eventos = JSON.parse(hidenEvento);
               eventoData.push(eventos);
           }

          var Calendar = FullCalendar.Calendar;
          var calendarEl = document.getElementById('calendar');

          var calendar = new Calendar(calendarEl, {
            locale: 'pt-br',
            allDayText: 'Dia Inteiro',
            headerToolbar: {
              left  : '',
              center: 'title',
              right : 'dayGridMonth,timeGridWeek,timeGridDay'
            },
            buttonText: { today: 'Hoje', month: 'Mês', week: 'Semana', day: 'Dia' },
            themeSystem: 'bootstrap',
            events: eventos,
            eventClick: function(event) {
                var agendamentoId = event.event._def.extendedProps.AgendamentoId;
                $('#modal-xl-Agendamento').modal('show');
                $.ajax({
                    url: '@Url.Action("AgendamentoById", "Agendamento", new { id = "__id__" })'.replace('__id__', agendamentoId),
                    type: 'GET',
                    success: function(response) {
                        var titulo = document.getElementById("titulo").innerText = 'Agendamento - ' + response.servicoNome + ' - ' + response.nome;
                        const formatador = new Intl.DateTimeFormat('pt-BR', {
                                day: "2-digit",
                                month: "2-digit",
                                year: "numeric"
                        });
                        const date = new Date(response.dataMarcada);
                        var dataFormatada = formatador.format(date);
                        var cidadao = document.getElementById("cidadao").innerText  = response.nome;
                        var protocolo = document.getElementById("protocolo").innerText  = response.protocolo;
                        var servico = document.getElementById("servico").innerText  = response.servicoNome;
                        var dataMarcada = document.getElementById("dataMarcada").innerText  = dataFormatada;
                        var horario = document.getElementById("horario").innerText  = response.hora;
                        var cpf = document.getElementById("cpf").innerText  = response.cpfCnpj;
                        var confirmacao = response.confirmarAgendamento;
                        var inputConfirmacao = document.getElementById("checkConfirmado");
                        var divConfirmacao = document.getElementById("divConfirmacao");
                        var headerModal = document.getElementById("headerModal");
                        var confirmacaoText = document.getElementById("confirmacaoText");
                        if (confirmacao === true) {
                            headerModal.classList.remove('bg-dark', 'bg-danger');
                            headerModal.classList.add('bg-success');
                            inputConfirmacao.checked = true;
                            divConfirmacao.classList.remove('icheck-danger');
                            divConfirmacao.classList.add('icheck-success');
                            confirmacaoText.innerHTML = "Agendamento Confirmado: ";
                        }
                        else if (confirmacao === null) {
                            headerModal.classList.remove('bg-success', 'bg-danger');
                            headerModal.classList.add('bg-dark');
                            inputConfirmacao.checked = false;
                            confirmacaoText.innerHTML = "Aguardando Confirmação: ";
                        }
                        else if (confirmacao === false) {
                            headerModal.classList.remove('bg-dark', 'bg-success');
                            headerModal.classList.add('bg-danger');
                            divConfirmacao.classList.remove('icheck-success');
                            divConfirmacao.classList.add('icheck-danger');
                            confirmacaoText.innerHTML = "Agendamento Não Confirmação: ";
                            inputConfirmacao.checked = true;
                        }
                    },
                    error: function(error) {

                    }
                });
            },
            editable  : true,
            droppable : true,
          });

          calendar.render();

            setTimeout(() => {
                document.querySelector('.fc-next-button').setAttribute('title', 'Próximo mês');
                document.querySelector('.fc-prev-button').setAttribute('title', 'Mês anterior');
            }, 500);
        });
    </script>
}