@using SisAt.Models.ViewModel
@model AgendamentoViewModel;
@{
    ViewData["Title"] = "Agendamento On-line";
}

<style>
    .cardInside {
    box-shadow: 0px 4px 8px 0px #7986CB
    }

    input:focus {
    -moz-box-shadow: none !important;
    -webkit-box-shadow: none !important;
    box-shadow: none !important;
    border: 1px solid #512DA8;
    outline-width: 0
    }

    ::placeholder {
    color: #fff;
    opacity: 1
    }

    :-ms-input-placeholder {
    color: #fff
    }

    ::-ms-input-placeholder {
    color: #fff
    }

    button:focus {
    -moz-box-shadow: none !important;
    -webkit-box-shadow: none !important;
    box-shadow: none !important;
    outline-width: 0
    }

    .datepicker-dropdown:after {
    border-bottom: 6px solid #000
    }

    thead tr:nth-child(3) th {
    color: #fff !important;
    font-weight: bold;
    padding-top: 20px;
    padding-bottom: 10px
    }

    .dow,
    .old-day,
    .day,
    .new-day {
    width: 40px !important;
    height: 40px !important;
    border-radius: 0px !important
    }

    .old-day:hover,
    .day:hover,
    .new-day:hover,
    .month:hover,
    .year:hover,
    .decade:hover,
    .century:hover {
    border-radius: 6px !important;
    background-color: #eee;
    color: #000
    }

    .botao {
    padding: 12px 24px;
    border-radius: 2px;
    -moz-border-radius: 2px;
    -webkit-border-radius: 2px;
    background: #14bdad;
    border: 1px solid #14bdad;
    }

    tr > td.active {
    border-radius: 6px !important;
    background-image: linear-gradient(135deg, #434343 10%, #000000 100%) !important;
    color: #fafafa !important
    }

    td > span.active {
    border-radius: 6px !important;
    background-image: linear-gradient(135deg, #434343 10%, #000000 100%) !important;
    color: #fafafa !important
    }

    .disabled {
    color: #616161 !important
    }

    .prev,
    .next,
    .datepicker-switch {
    border-radius: 0 !important;
    padding: 20px 10px !important;
    text-transform: uppercase;
    font-size: 20px;
    opacity: 0.8
    }

    .prev:hover,
    .next:hover,
    .datepicker-switch:hover {
    background-color: inherit !important;
    opacity: 1
    }

    .cell {
    border: 1px solid #BDBDBD;
    margin: 2px;
    cursor: pointer
    }

    .cell:hover {
    border: 1px solid #343a40 !important
    }

    .cell.select {
    background-color: #343a40 !important;
    color: #fff
    }

    .fa-calendar {
    color: #fff;
    font-size: 30px;
    padding-top: 8px;
    padding-left: 5px;
    cursor: pointer
    }

    .d-flex {
    display: flex;
    flex-wrap: wrap;
    }

    .col-sm-6 {
    flex: 1 1 50%;
    padding: 10px;
    }

    #divCalendario, #horariosContainer {
    display: block;
    width: 100%;
    }
</style>
<div class="wrapper">
    <nav class="main-header navbar navbar-expand navbar-white navbar-light" style="margin-left:0">
        <ul class="navbar-nav">
            <li class="nav-item d-none d-sm-inline-block">
                <a class="nav-link" style="font-weight:700;color:#6c757d!important">SISAT - Sistema de Atendimento</a>
            </li>
        </ul>
    </nav>
    <div class="content-wrapper" style="margin-left:0">
        <section class="content-header">
            <div class="container-fluid">
                <div class="row mb-2">
                    <div class="col-sm-6">
                        <h1>@ViewData["Title"]</h1>
                    </div>
                </div>
            </div>
        </section>
        <section class="content">
            <div class="container-fluid">
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <div class="card-header">
                                <ul class="navbar-nav">
                                    <li class="nav-item">
                                        <a class="nav-link" style="font-weight:700;color:#6c757d!important">Informações para Agendamento</a>
                                    </li>
                                </ul>
                            </div>
                            <div class="card-body">
                                <div class="text-center align-items-center justify-content-center">
                                    <div>
                                        <ul style="list-style-type: none; padding-left: 0;">
                                            <li class="nav-item">
                                                <a class="nav-link text-justify" style="font-weight:700;color:#6c757d!important;padding-left: 0;padding-right: 0;"> 1. Representante é a pessoa que irá comparecer à unidade de atendimento. Se o próprio contribuinte for comparecer à unidade, deverá preencher o campo do representante com o seu CPF.</a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link text-justify" style="font-weight:700;color:#6c757d!important;padding-left: 0;padding-right: 0;"> 2. O representante deverá comparecer no dia marcado com a documentação de identificação. A apresentação de procuração é obrigatória quando o representante for praticar atos ou administrar interesses em nome de outra pessoa que estejam protegidos por sigilo.</a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link text-justify" style="font-weight:700;color:#6c757d!important;padding-left: 0;padding-right: 0;"> 3. Nem todos os serviços prestados nas unidades de atendimento são agendáveis.</a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                                <form asp-action="Index" asp-controller="Agendamento" method="post">
                                    <div class="form-group">
                                        <label>Serviços:</label>
                                        @Html.DropDownListFor(
                                                                   model => model.id,
                                                                   (SelectList)ViewBag.Servicos,
                                                                   "Selecione um Serviço",
                                                                   new
                                                                   {
                                                                       @class = "form-control" + (ViewData.ModelState["id"]?.Errors.Count() > 0 ? " is-invalid" : ""),
                                                                       id = "id"
                                                                   }
                                                                   )
                                        @Html.ValidationMessageFor(x => x.id, "Selecionar o serviço é obrigatório.", new { @class = "invalid-feedback" })
                                    </div>
                                    <div class="form-group">
                                        <label>CPF:</label>
                                        <input type="text" asp-for="CpfCnpj" id="cpfCpj" class="form-control @(ViewData.ModelState["CpfCnpj"]?.Errors.Count() > 0 ? "is-invalid" : "")" placeholder="Informe o CPF ou CNPJ" />
                                        @Html.ValidationMessageFor(x => x.CpfCnpj, "", new { @class = "invalid-feedback" })
                                    </div>
                                    <div class="form-group">
                                        <label>Nome:</label>
                                        <input type="text" asp-for="Nome" id="nome" class="form-control @(ViewData.ModelState["Nome"]?.Errors.Count() > 0 ? "is-invalid" : "")" placeholder="Informe seu nome." />
                                        @Html.ValidationMessageFor(x => x.Nome, "", new { @class = "invalid-feedback" })
                                    </div>
                                    <div class="form-group">
                                        <label>E-mail:</label>
                                        <input type="email" asp-for="Email" id="email" class="form-control @(ViewData.ModelState["Email"]?.Errors.Count() > 0 ? "is-invalid" : "")" id="Email" placeholder="Informe seu E-mail">
                                        @Html.ValidationMessageFor(x => x.Email, "", new { @class = "invalid-feedback" })
                                    </div>
                                    <div class="d-flex flex-column flex-sm-row">
                                        <div class="col-sm-6" id="divCalendario" style="padding-left:0;display:none">
                                            <label>Data Disponíveis:</label>
                                            <div class="card cardInside">
                                                <div class="card-header border-0 bg-dark">
                                                    <h3 class="card-title">
                                                        <i class="far fa-calendar-alt"></i>
                                                        Calendario
                                                    </h3>
                                                    <div class="card-tools">
                                                        <button type="button" class="btn btn-dark btn-sm" data-card-widget="collapse">
                                                            <i class="fas fa-minus"></i>
                                                        </button>
                                                        <button type="button" class="btn btn-dark btn-sm" data-card-widget="remove">
                                                            <i class="fas fa-times"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                                <div class="card-body pt-0">
                                                    <div id="calendar" style="width: 100%"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6" style="padding-left:0; padding-right:0">
                                            <div class="form-group" id="horariosContainer" style="display: none;">
                                                <label>Horários Disponíveis:</label>
                                                <div class="cardInside border-0" style="height:417px;">
                                                    <div class="card-header bg-dark text-center" id="dia">
                                                    </div>
                                                    <div class="card-body p-3 p-sm-5">
                                                        <div id="horarios-container"></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <input type="hidden" id="horarioChecked" name="horarioChecked" />
                                    <input type="hidden" id="data" name="data" />
                                    <div class="form-group">
                                        <button type="submit" id="salvar" class="btn btn-dark">Salvar</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>

    @if (Model?.AgendamentoReturnViewl != null)
    {
        <div class="modal fade" id="modal-primary">
            <div class="modal-dialog">
                <div class="modal-content bg-default">
                    <div class="modal-header bg-dark ">
                        <h4 class="modal-title">Agendamento</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="color:white">
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>
                    <div class="modal-body" id="conteudo-impressao">
                        <div class="form-group">
                            <label>CIDADÃO: @Model.AgendamentoReturnViewl.Nome</label>
                        </div>
                        <div class="form-group">
                            <label>PROTOCOLO: @Model.AgendamentoReturnViewl.Protocolo</label>
                        </div>
                        <div class="form-group">
                            <label>SERVIÇO: @Model.AgendamentoReturnViewl.ServicoNome</label>
                        </div>
                        <div class="form-group">
                            <label>DATA MARCADA: @Model.AgendamentoReturnViewl.DataMarcada?.ToString("dd/MM/yyyy")</label>
                        </div>
                        <div class="form-group">
                            <label>HORÁRIO: @Model.AgendamentoReturnViewl.Hora</label>
                        </div>
                        <div class="dropdown-divider"></div>
                        <div class="form-group text-justify">
                            <label>Observações: </label>
                            <ul style="list-style-type: none; padding-left: 0;">
                                <li class="nav-item">
                                    <a class="nav-link text-justify" style="font-weight:400;color:#6c757d!important;padding-left: 0;padding-right: 0;">Por favor, chegar com antecendência no horário agendado e dirigir-se ao guichê de atendimento.</a>
                                </li>
                            </ul>
                        </div>

                    </div>
                    <div class="modal-footer justify-content-between">
                        <button type="button" class="btn btn-default" data-dismiss="modal"><i class="fa fa-times"></i> Fechar</button>
                        <button type="button" class="btn btn-dark" id="imprimir"><i class="fa fa-print"></i> Imprimir</button>
                    </div>
                </div>
            </div>
        </div>
    }

    <footer class="main-footer" style="margin-left:0">
        <strong>&copy; @DateTime.Now.Year - W2E Soluções</strong>
    </footer>
</div>

@section Scripts {
    @{
        var toastrMessage = TempData["Error"] as string;
        var toastrInfo = TempData["Info"] as string;
        var toastrMessageSuccess = TempData["Sucesso"] as string;
        bool? calendario = TempData["Calendario"] as bool?;
    }

    @if (!string.IsNullOrEmpty(toastrMessage))
    {
        <script>
            toastr.error('@toastrMessage', 'Erro', {
                closeButton: true,
                progressBar: true
            });
        </script>
    }

    @if (!string.IsNullOrEmpty(toastrInfo))
    {
        <script>
            toastr.info('@toastrInfo', 'Informação', {
                closeButton: true,
                progressBar: true
            });

            $(document).ready(function () {
                var id = $("#id").val();
                $.ajax({
                    url: '@Url.Action("DiasDisponiveis", "Agendamento", new { id = "__id__" })'.replace('__id__', id),
                    type: 'GET',
                    success: function(response) {
                        if (response.success && response.dias && Array.isArray(response.dias)) {
                            var datasDisponiveis = response.dias.map(function(item) {
                                return moment(item.dataCadastrada).format('YYYY-MM-DD');
                            });

                            var datasMoment = datasDisponiveis.map(function(date) {
                                return moment(date, 'YYYY-MM-DD');
                            });

                            $("#divCalendario").show();

                            $('#calendar').datetimepicker('destroy');

                            $('#calendar').datetimepicker({
                                inline: true,
                                locale: 'pt-br',
                                format: 'L',
                                icons: {
                                    time: 'far fa-clock',
                                    date: 'far fa-calendar',
                                    up: 'fa fa-arrow-up',
                                    down: 'fa fa-arrow-down'
                                },
                                tooltips: {
                                    today: 'Hoje',
                                    clear: 'Limpar',
                                    close: 'Fechar',
                                    selectMonth: 'Selecionar Mês',
                                    selectYear: 'Selecionar Ano',
                                    selectTime: 'Selecione a Hora',
                                    incrementHour: 'Incrementar Hora',
                                    decrementHour: 'Decrementar Hora',
                                    incrementMinute: 'Incrementar Minuto',
                                    decrementMinute: 'Decrementar  Minuto',
                                    selectDate: 'Selecionar a Data'
                                },
                                toolbarplacement: 'bottom',
                                minDate: moment(),
                                enabledDates: datasMoment
                            });
                        } else {
                            $("#divCalendario").hide();
                            $('#calendar').datetimepicker('destroy');
                            $("#horariosContainer").hide();
                            toastr.error('Nenhum horário disponível para este serviço.', 'Erro.', { closeButton: true, progressBar: true });
                        }
                    },
                    error: function() {
                        console.error('Erro ao carregar datas disponíveis');
                    }
                });
            });
        </script>
    }

    @if (calendario == true)
    {
        <script>
            $(document).ready(function () {
                var id = $("#id").val();
                $.ajax({
                    url: '@Url.Action("DiasDisponiveis", "Agendamento", new { id = "__id__" })'.replace('__id__', id),
                    type: 'GET',
                    success: function(response) {
                        if (response.success && response.dias && Array.isArray(response.dias)) {
                            var datasDisponiveis = response.dias.map(function(item) {
                                return moment(item.dataCadastrada).format('YYYY-MM-DD');
                            });

                            var datasMoment = datasDisponiveis.map(function(date) {
                                return moment(date, 'YYYY-MM-DD');
                            });

                            $("#divCalendario").show();

                            $('#calendar').datetimepicker('destroy');

                            $('#calendar').datetimepicker({
                                inline: true,
                                locale: 'pt-br',
                                format: 'L',
                                icons: {
                                    time: 'far fa-clock',
                                    date: 'far fa-calendar',
                                    up: 'fa fa-arrow-up',
                                    down: 'fa fa-arrow-down'
                                },
                                tooltips: {
                                    today: 'Hoje',
                                    clear: 'Limpar',
                                    close: 'Fechar',
                                    selectMonth: 'Selecionar Mês',
                                    selectYear: 'Selecionar Ano',
                                    selectTime: 'Selecione a Hora',
                                    incrementHour: 'Incrementar Hora',
                                    decrementHour: 'Decrementar Hora',
                                    incrementMinute: 'Incrementar Minuto',
                                    decrementMinute: 'Decrementar  Minuto',
                                    selectDate: 'Selecionar a Data'
                                },
                                toolbarplacement: 'bottom',
                                minDate: moment(),
                                enabledDates: datasMoment
                            });
                        } else {
                            $("#divCalendario").hide();
                            $('#calendar').datetimepicker('destroy');
                            $("#horariosContainer").hide();
                            toastr.error('Nenhum horário disponível para este serviço.', 'Erro.', { closeButton: true, progressBar: true });
                        }
                    },
                    error: function() {
                        console.error('Erro ao carregar datas disponíveis');
                    }
                });
            });
        </script>
    }

    @if (!string.IsNullOrEmpty(toastrMessageSuccess))
    {
        <script>
            toastr.success('@toastrMessageSuccess', 'Sucesso.', {
                closeButton: true,
                progressBar: true
            });
        </script>
    }

    <script>
        $(document).ready( function() {
            $('#salvar').on('click', function() {
                var horarios = [];

                $('.cell.select').each(function() {
                    var hora = $(this).data('hora');
                    var id = $(this).data('id');
                    var data = $('#data').val();

                    horarios.push({
                        id: id,
                        hora: hora,
                        data: data
                    });
                });

                $('#horarioChecked').val(JSON.stringify(horarios));
            }); 

            $('#id').on('change', function () {
                if ($(this).hasClass('is-invalid')) {
                    $(this).removeClass('is-invalid');
                }
            });

            $('#cpfCpj').on('change', function () {
                if ($(this).hasClass('is-invalid')) {
                    $(this).removeClass('is-invalid');
                }
            });

            $('#cpfCpj').inputmask('999.999.999-99');

            $('#nome').on('change', function () {
                if ($(this).hasClass('is-invalid')) {
                    $(this).removeClass('is-invalid');
                }
            });

            $('#email').on('change', function () {
                if ($(this).hasClass('is-invalid')) {
                    $(this).removeClass('is-invalid');
                }
            });
        });
    </script>

    <script type="text/javascript">
        $(function () {
            $('#id').on('change', function () {
                var id = $("#id").val();
                $.ajax({
                    url: '@Url.Action("DiasDisponiveis", "Agendamento", new { id = "__id__" })'.replace('__id__', id),
                    type: 'GET',
                    success: function(response) {
                        if (response.success && response.dias && Array.isArray(response.dias)) {
                            var datasDisponiveis = response.dias.map(function(item) {
                                return moment(item.dataCadastrada).format('YYYY-MM-DD');
                            });

                            var datasMoment = datasDisponiveis.map(function(date) {
                                return moment(date, 'YYYY-MM-DD');
                            });

                            $("#divCalendario").show();

                            $('#calendar').datetimepicker('destroy');

                            $('#calendar').datetimepicker({
                                inline: true,
                                locale: 'pt-br',
                                format: 'L',
                                icons: {
                                    time: 'far fa-clock',
                                    date: 'far fa-calendar',
                                    up: 'fa fa-arrow-up',
                                    down: 'fa fa-arrow-down'
                                },
                                tooltips: {
                                    today: 'Hoje',
                                    clear: 'Limpar',
                                    close: 'Fechar',
                                    selectMonth: 'Selecionar Mês',
                                    selectYear: 'Selecionar Ano',
                                    selectTime: 'Selecione a Hora',
                                    incrementHour: 'Incrementar Hora',
                                    decrementHour: 'Decrementar Hora',
                                    incrementMinute: 'Incrementar Minuto',
                                    decrementMinute: 'Decrementar  Minuto',
                                    selectDate: 'Selecionar a Data'
                                },
                                toolbarplacement: 'bottom',
                                minDate: moment(),
                                enabledDates: datasMoment
                            });
                        } else {
                            $("#divCalendario").hide();
                            $('#calendar').datetimepicker('destroy');
                            $("#horariosContainer").hide();
                            toastr.error('Nenhum horário disponível para este serviço.', 'Erro.', { closeButton: true, progressBar: true });
                        }
                    },
                    error: function() {
                        console.error('Erro ao carregar datas disponíveis');
                    }
                });
            });

            $('#calendar').on('change.datetimepicker', function (e) {
                var selectedDate = e.date.format('L');
                var id = $("#id").val();
                var data = $('#data').val(selectedDate);
                if (id && selectedDate) {
                    $.ajax({
                    url: '@Url.Action("Horarios", "Agendamento", new { id = "__id__" })'.replace('__id__', id) + '?data=' + selectedDate,
                    type: 'GET',
                    success: function (response) {
                        if (response.success) {
                            $("#dia").text('Data: ' + selectedDate);
                            var container = $("#horarios-container");
                            container.empty();

                            if (response.horarios && response.horarios.length > 0) {
                                let count = 0;
                                let rowHtml = '';

                                rowHtml += "<div class='row text-center mx-0'>";

                                response.horarios.forEach(function (horario, index) {
                                    rowHtml += "<div class='col-md-2 col-4 my-1 px-2'>" +
                                               "<div class='cell py-1' value ='" + horario.id +"' data-hora='" + horario.hora + "' data-id='" + horario.id + "'>" + horario.hora + "</div></div>";

                                    count++;
                                    if (count % 6 === 0) {
                                        rowHtml += "</div><div class='row text-center mx-0'>";
                                    }
                                });

                                rowHtml += "</div>";
                                container.html(rowHtml);

                                $("#horariosContainer").show();
                            } else {
                                $("#horariosContainer").hide();
                                console.log("aq");
                                toastr.warning('Nenhum horário disponível para este serviço.', 'Aviso', { closeButton: true, progressBar: true });
                            }
                        } else {
                            $("#horariosContainer").hide();
                            toastr.error('Nenhum horário disponível para este serviço.', 'Erro.', { closeButton: true, progressBar: true });
                        }
                    },
                    error: function () {
                        toastr.error('Erro ao carregar os horários.', 'Erro.', { closeButton: true, progressBar: true });
                        console.log("estou aqui");
                    }
                    });
                } else {
                    toastr.info("É necessários selecionar um serviço e uma data para selecionar os horários disponíneis.", "Informação", { closeButton: true, progressBar: true });
                }
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            $('#horarios-container').on('click', '.cell', function() {
                if ($(this).hasClass('select')) {
                    $(this).removeClass('select');
                    console.log("Horário desmarcado: " + $(this).data('hora'));
                } else {
                    $('.cell').removeClass('select');
                    $(this).addClass('select');
                    console.log("Horário selecionado: " + $(this).data('hora'));
                }
            });
        });
    </script>

    @if (Model?.AgendamentoReturnViewl != null)
    {
        <script>
            $(document).ready(function() {
                $('#modal-primary').modal('show');
            });
        </script>
    }
}