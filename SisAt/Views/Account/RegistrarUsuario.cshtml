@using SisAt.Models.ViewModel
@model RegistrarUsuarioRequestDto;
@{
    ViewData["Title"] = "Registro de Usuário";
}
<section class="hold-transition register-page">
    <div class="register-box">
        <div class="register-logo">
            <a href="#"><b>SIS</b>AT</a>
        </div>
        <div class="card">
            <div class="card-body register-card-body">
                <p class="login-box-msg">Registro de usuário</p>
                <form method="post" asp-action="RegistrarUsuario" asp-controller="Account">
                    <div class="input-group mb-3">
                        <input type="text" asp-for="Nome" id="Nome" class="form-control @(ViewData.ModelState["Nome"]?.Errors.Count() > 0 ? "is-invalid" : "")" placeholder="Nome completo">
                        <div class="input-group-append">
                            <div class="input-group-text">
                                <span class="fas fa-user"></span>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(x => x.Nome, "", new { @class = "invalid-feedback" })
                    </div>
                    <div class="input-group mb-3">
                        <input type="email" asp-for="Email" id="Email" class="form-control @(ViewData.ModelState["Email"]?.Errors.Count() > 0 ? "is-invalid" : "")" placeholder="Email">
                        <div class="input-group-append">
                            <div class="input-group-text">
                                <span class="fas fa-envelope"></span>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(x => x.Email, "", new { @class = "invalid-feedback" })
                    </div>
                    <div class="input-group mb-3">
                        <input type="password" asp-for="Senha" id="Senha" class="form-control @(ViewData.ModelState["Senha"]?.Errors.Count() > 0 ? "is-invalid" : "")" placeholder="A senha deve conter 6 ou mais caracteres.">
                        <div class="input-group-append">
                            <div class="input-group-text">
                                <span class="fas fa-lock"></span>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(x => x.Senha, "", new { @class = "invalid-feedback" })
                    </div>
                    <div class="input-group mb-3">
                        <input type="password" asp-for="ConfirmarSenha" id="ConfirmarSenha" class="form-control @(ViewData.ModelState["ConfirmarSenha"]?.Errors.Count() > 0 ? "is-invalid" : "")" placeholder="Confirme a sua senha. As senhas devem ser iguais.">
                        <div class="input-group-append">
                            <div class="input-group-text">
                                <span class="fas fa-lock"></span>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(x => x.ConfirmarSenha, "", new { @class = "invalid-feedback" })
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <button type="submit" class="btn btn-dark btn-block">Registrar</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @{
        var toastrMessage = TempData["Error"] as string;
        var toastrMessageSuccess = TempData["ToastrMessageSuccess"] as string;
    }

    @if (!string.IsNullOrEmpty(toastrMessage))
    {
        <script>
            toastr.error('@toastrMessage', 'Erro', {
                closeButton: true,
                progressBar: true
            });
        </script>
    }

    @if (!string.IsNullOrEmpty(toastrMessageSuccess))
    {
        <script>
            toastr.success('@toastrMessageSuccess', 'Sucesso.', {
                closeButton: true,
                progressBar: true
            });
        </script>
    }

    <script>
        $(document).ready(function() {
            $('#Nome').on('change', function () {
                if ($(this).hasClass('is-invalid')) {
                    $(this).removeClass('is-invalid');
                }
            });

            $('#Email').on('change', function () {
                if ($(this).hasClass('is-invalid')) {
                    $(this).removeClass('is-invalid');
                }
            });

            $('#Senha').on('change', function () {
                if ($(this).hasClass('is-invalid')) {
                    $(this).removeClass('is-invalid');
                }
            });

            $('#ConfirmarSenha').on('change', function () {
                if ($(this).hasClass('is-invalid')) {
                    $(this).removeClass('is-invalid');
                }
            });
        });
    </script>
}